/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qlnt.ui;

import com.qlnt.dao.DanhMucThuocDAO;
import com.qlnt.dao.HangHoaDAO;
import com.qlnt.dao.HoaDonChiTietDAO;
import com.qlnt.dao.HoaDonDAO;
import com.qlnt.dao.KhachHangDAO;
import com.qlnt.entity.DanhMucThuoc;
import com.qlnt.entity.HangHoa;
import com.qlnt.entity.HoaDon;
import com.qlnt.entity.HoaDonChiTiet;
import com.qlnt.entity.KhachHang;
import com.qlnt.util.Auth;
import com.qlnt.util.MsgBox;
import com.qlnt.util.XDate;
import com.qlnt.util.XJdbc;
import java.awt.Cursor;
import static java.awt.Frame.HAND_CURSOR;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author monst
 */
public class BanHangJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TongQuanJPannel
     */
    public BanHangJPanel() {
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grGioiTinh = new javax.swing.ButtonGroup();
        popupTenHH = new javax.swing.JPopupMenu();
        pnlTenHH = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstTenHH = new javax.swing.JList<>();
        pnlGioHang = new javax.swing.JPanel();
        btnSaoChepHD = new javax.swing.JButton();
        txtTimKiemThuoc = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTimKiemThuoc = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        btnXoaHH = new javax.swing.JButton();
        txtSuaSoLuong = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnTaoMoi = new javax.swing.JButton();
        pnlHoaDon = new javax.swing.JPanel();
        txtTimKiemKH = new javax.swing.JTextField();
        btnThemKH = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblTimKiemKH = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        txtNV = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNgayTao = new javax.swing.JTextField();
        txtTenKH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtNamSinh = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDiem = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtKhachTT = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtTienThua = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnHD = new javax.swing.JButton();
        btnTT = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtTrieuChung = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        txtCanNang = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        popupTenHH.setFocusable(false);

        lstTenHH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstTenHHMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlTenHHLayout = new javax.swing.GroupLayout(pnlTenHH);
        pnlTenHH.setLayout(pnlTenHHLayout);
        pnlTenHHLayout.setHorizontalGroup(
            pnlTenHHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
            .addGroup(pnlTenHHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTenHHLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lstTenHH)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pnlTenHHLayout.setVerticalGroup(
            pnlTenHHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(pnlTenHHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTenHHLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lstTenHH)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1000, 570));
        setMinimumSize(new java.awt.Dimension(1000, 570));
        setPreferredSize(new java.awt.Dimension(1000, 570));

        pnlGioHang.setBackground(new java.awt.Color(255, 255, 255));
        pnlGioHang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Giỏ hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 16))); // NOI18N
        pnlGioHang.setMaximumSize(new java.awt.Dimension(500, 600));
        pnlGioHang.setMinimumSize(new java.awt.Dimension(500, 600));
        pnlGioHang.setPreferredSize(new java.awt.Dimension(500, 600));
        pnlGioHang.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSaoChepHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnSaoChep.png"))); // NOI18N
        btnSaoChepHD.setToolTipText("Sao chép hóa đơn đã bán");
        btnSaoChepHD.setBorder(null);
        btnSaoChepHD.setContentAreaFilled(false);
        btnSaoChepHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaoChepHDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaoChepHDMouseExited(evt);
            }
        });
        btnSaoChepHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaoChepHDActionPerformed(evt);
            }
        });
        pnlGioHang.add(btnSaoChepHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 80, -1));

        txtTimKiemThuoc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtTimKiemThuoc.setToolTipText("");
        txtTimKiemThuoc.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(160, 160, 160)));
        txtTimKiemThuoc.setOpaque(false);
        txtTimKiemThuoc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemThuocFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemThuocFocusLost(evt);
            }
        });
        txtTimKiemThuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemThuocActionPerformed(evt);
            }
        });
        txtTimKiemThuoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemThuocKeyReleased(evt);
            }
        });
        pnlGioHang.add(txtTimKiemThuoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 270, 22));

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HH", "Tên thuốc", "Đơn vị tính", "Số lượng", "Giá bán", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGioHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGioHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGioHang);

        pnlGioHang.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 300, -1, 162));
        pnlGioHang.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 282, 452, 7));

        tblTimKiemThuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã HH", "Tên thuốc", "Hoạt chất", "Tồn kho", "DV", "Hạn sử dụng", "Giá bán"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTimKiemThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTimKiemThuocMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTimKiemThuoc);

        pnlGioHang.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 120, -1, 151));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnSearch.png"))); // NOI18N
        pnlGioHang.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 87, -1, -1));

        btnXoaHH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnXoaHH.png"))); // NOI18N
        btnXoaHH.setContentAreaFilled(false);
        btnXoaHH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXoaHHMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXoaHHMouseExited(evt);
            }
        });
        btnXoaHH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHHActionPerformed(evt);
            }
        });
        pnlGioHang.add(btnXoaHH, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 478, 90, 30));

        txtSuaSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSuaSoLuongActionPerformed(evt);
            }
        });
        txtSuaSoLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSuaSoLuongKeyReleased(evt);
            }
        });
        pnlGioHang.add(txtSuaSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 480, 170, 28));

        jLabel1.setText("Số lượng:");
        pnlGioHang.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, -1, 22));

        btnTaoMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnTaoMoi.png"))); // NOI18N
        btnTaoMoi.setContentAreaFilled(false);
        btnTaoMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTaoMoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTaoMoiMouseExited(evt);
            }
        });
        btnTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMoiActionPerformed(evt);
            }
        });
        pnlGioHang.add(btnTaoMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 80, 23));

        pnlHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        pnlHoaDon.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 16))); // NOI18N
        pnlHoaDon.setMaximumSize(new java.awt.Dimension(500, 600));
        pnlHoaDon.setMinimumSize(new java.awt.Dimension(500, 600));
        pnlHoaDon.setPreferredSize(new java.awt.Dimension(500, 600));

        txtTimKiemKH.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtTimKiemKH.setToolTipText("");
        txtTimKiemKH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(160, 160, 160)));
        txtTimKiemKH.setOpaque(false);
        txtTimKiemKH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemKHFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemKHFocusLost(evt);
            }
        });
        txtTimKiemKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKHKeyReleased(evt);
            }
        });

        btnThemKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnThemKHMoi.png"))); // NOI18N
        btnThemKH.setToolTipText("Thêm khách hàng mới");
        btnThemKH.setBorder(null);
        btnThemKH.setContentAreaFilled(false);
        btnThemKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemKHMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemKHMouseExited(evt);
            }
        });
        btnThemKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKHActionPerformed(evt);
            }
        });

        tblTimKiemKH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã KH", "Tên KH", "Giới tính", "Năm sinh ", "Sdt", "Điểm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTimKiemKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTimKiemKHMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblTimKiemKHMouseEntered(evt);
            }
        });
        jScrollPane5.setViewportView(tblTimKiemKH);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNV.setEditable(false);
        txtNV.setBackground(new java.awt.Color(204, 204, 204));
        txtNV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtNV.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNV.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jPanel4.add(txtNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 0, 150, 26));

        jLabel2.setText("Ngày tạo:");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        txtNgayTao.setEditable(false);
        txtNgayTao.setBackground(new java.awt.Color(204, 204, 204));
        txtNgayTao.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel4.add(txtNgayTao, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 130, 26));

        txtTenKH.setEditable(false);
        txtTenKH.setBackground(new java.awt.Color(204, 204, 204));
        txtTenKH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel4.add(txtTenKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 160, 26));

        jLabel3.setText("Tên khách hàng:");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, -1, -1));

        jLabel4.setText("Giới tính:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        grGioiTinh.add(rdoNam);
        rdoNam.setText("Nam");
        rdoNam.setEnabled(false);
        jPanel4.add(rdoNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));

        grGioiTinh.add(rdoNu);
        rdoNu.setText("Nữ");
        rdoNu.setEnabled(false);
        jPanel4.add(rdoNu, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, -1, -1));

        jLabel5.setText("Năm sinh:");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, -1));

        txtNamSinh.setEditable(false);
        txtNamSinh.setBackground(new java.awt.Color(204, 204, 204));
        txtNamSinh.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel4.add(txtNamSinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 60, 26));

        jLabel6.setText("SDT:");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        txtDiem.setEditable(false);
        txtDiem.setBackground(new java.awt.Color(204, 204, 204));
        txtDiem.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel4.add(txtDiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 100, 26));

        jLabel7.setText("Điểm thân thiên:");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, -1, -1));

        txtTongTien.setEditable(false);
        txtTongTien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTongTien.setText("0.0");
        txtTongTien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtTongTien.setOpaque(false);
        jPanel4.add(txtTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 370, 26));

        jLabel8.setText("Tổng tiền:");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        txtSDT.setEditable(false);
        txtSDT.setBackground(new java.awt.Color(204, 204, 204));
        txtSDT.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel4.add(txtSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 170, 26));

        jLabel17.setText("Ghi chú:");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        txtKhachTT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtKhachTT.setText("0.0");
        txtKhachTT.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtKhachTT.setOpaque(false);
        txtKhachTT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtKhachTTFocusGained(evt);
            }
        });
        txtKhachTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKhachTTActionPerformed(evt);
            }
        });
        txtKhachTT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKhachTTKeyReleased(evt);
            }
        });
        jPanel4.add(txtKhachTT, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 100, 26));

        jLabel18.setText("Tiền thừa:");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        txtTienThua.setEditable(false);
        txtTienThua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTienThua.setText("0.0");
        txtTienThua.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtTienThua.setOpaque(false);
        jPanel4.add(txtTienThua, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 140, 26));

        jLabel19.setText("Khách thanh toán:");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        txtGhiChu.setColumns(20);
        txtGhiChu.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtGhiChu.setRows(5);
        txtGhiChu.setWrapStyleWord(true);
        txtGhiChu.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtGhiChu.setOpaque(false);
        jScrollPane6.setViewportView(txtGhiChu);

        jPanel4.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 170, 60));

        btnHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnInHD.png"))); // NOI18N
        btnHD.setBorder(null);
        btnHD.setContentAreaFilled(false);
        btnHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHDMouseExited(evt);
            }
        });
        btnHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHDActionPerformed(evt);
            }
        });
        jPanel4.add(btnHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 190, 30));

        btnTT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnThanToan.png"))); // NOI18N
        btnTT.setBorder(null);
        btnTT.setContentAreaFilled(false);
        btnTT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTTMouseExited(evt);
            }
        });
        btnTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTTActionPerformed(evt);
            }
        });
        jPanel4.add(btnTT, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 190, 30));

        jLabel11.setText("Nhân viên:");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        txtMaKH.setEditable(false);
        txtMaKH.setBackground(new java.awt.Color(204, 204, 204));
        txtMaKH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtMaKH.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jPanel4.add(txtMaKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 70, 26));

        jLabel12.setText("Mã khách hàng:");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        txtTrieuChung.setColumns(20);
        txtTrieuChung.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtTrieuChung.setRows(5);
        txtTrieuChung.setWrapStyleWord(true);
        txtTrieuChung.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtTrieuChung.setOpaque(false);
        jScrollPane7.setViewportView(txtTrieuChung);

        jPanel4.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 150, 60));

        jLabel20.setText("Triệu chứng:");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, 70, -1));

        txtCanNang.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtCanNang.setOpaque(false);
        jPanel4.add(txtCanNang, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 60, 26));

        jLabel13.setText("Cân nặng:");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnSearch.png"))); // NOI18N

        javax.swing.GroupLayout pnlHoaDonLayout = new javax.swing.GroupLayout(pnlHoaDon);
        pnlHoaDon.setLayout(pnlHoaDonLayout);
        pnlHoaDonLayout.setHorizontalGroup(
            pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoaDonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlHoaDonLayout.createSequentialGroup()
                        .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlHoaDonLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTimKiemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnThemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlHoaDonLayout.setVerticalGroup(
            pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoaDonLayout.createSequentialGroup()
                .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTimKiemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThemKH))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGioHang, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlGioHang, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemThuocFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemThuocFocusGained
        if (!txtTimKiemThuoc.getText().equals("")) {
            txtTimKiemThuoc.setText("");

        }
    }//GEN-LAST:event_txtTimKiemThuocFocusGained

    private void txtTimKiemThuocFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemThuocFocusLost
        if (txtTimKiemThuoc.getText().equals("")) {
            txtTimKiemThuoc.setText("Nhập tên thuốc cần tìm");
        }
    }//GEN-LAST:event_txtTimKiemThuocFocusLost

    private void txtTimKiemKHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemKHFocusGained
        if (!txtTimKiemKH.getText().equals("")) {
            txtTimKiemKH.setText("");
        }
    }//GEN-LAST:event_txtTimKiemKHFocusGained

    private void txtTimKiemKHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemKHFocusLost
        if (txtTimKiemKH.getText().equals("")) {
            txtTimKiemKH.setText("Nhập tên khách hàng cần tìm");
        }
    }//GEN-LAST:event_txtTimKiemKHFocusLost

    private void btnHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHDActionPerformed
        inHoaDon();
    }//GEN-LAST:event_btnHDActionPerformed

    private void btnSaoChepHDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaoChepHDMouseEntered
        changeIcon(1, btnSaoChepHD, "src//com//qlnt//icon//btnSaoChep_hover.png");
    }//GEN-LAST:event_btnSaoChepHDMouseEntered

    private void btnSaoChepHDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaoChepHDMouseExited
        changeIcon(2, btnSaoChepHD, "src//com//qlnt//icon//btnSaoChep.png");
    }//GEN-LAST:event_btnSaoChepHDMouseExited

    private void btnThemKHMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemKHMouseEntered
        changeIcon(1, btnThemKH, "src//com//qlnt//icon//btnThemKHMoi_hover.png");
    }//GEN-LAST:event_btnThemKHMouseEntered

    private void btnThemKHMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemKHMouseExited
        changeIcon(2, btnThemKH, "src//com//qlnt//icon//btnThemKHMoi.png");
    }//GEN-LAST:event_btnThemKHMouseExited

    private void btnTTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTTMouseEntered
        changeIcon(1, btnTT, "src//com//qlnt//icon//btnThanToan_hover.png");
    }//GEN-LAST:event_btnTTMouseEntered

    private void btnTTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTTMouseExited
        changeIcon(2, btnTT, "src//com//qlnt//icon//btnThanToan.png");
    }//GEN-LAST:event_btnTTMouseExited

    private void btnHDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHDMouseEntered
        changeIcon(1, btnHD, "src//com//qlnt//icon//btnInHD_hover.png");
    }//GEN-LAST:event_btnHDMouseEntered

    private void btnHDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHDMouseExited
        changeIcon(2, btnHD, "src//com//qlnt//icon//btnInHD.png");
    }//GEN-LAST:event_btnHDMouseExited

    private void txtTimKiemThuocKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemThuocKeyReleased
        String keyDMT = txtTimKiemThuoc.getText().trim();
        if (!keyDMT.equals("")) {
            List<DanhMucThuoc> list = dmtdao.selectNotInCourse(keyDMT);
            DefaultListModel model = new DefaultListModel();
            model.setSize(0);
            for (DanhMucThuoc dmt : list) {
                model.addElement(dmt.getTenThuoc());
                lstTenHH.setModel(model);
            }
            popupTenHH.show(txtTimKiemThuoc, 0, txtTimKiemThuoc.getHeight());
        }
    }//GEN-LAST:event_txtTimKiemThuocKeyReleased

    private void tblTimKiemThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTimKiemThuocMouseClicked
        this.row = tblTimKiemThuoc.getSelectedRow();
        txtSuaSoLuong.setEditable(false);
        themVaoGioHang();
        tinhTongTien();
    }//GEN-LAST:event_tblTimKiemThuocMouseClicked

    private void tblGioHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMouseClicked
        this.rowGH = tblGioHang.getSelectedRow();
        txtSuaSoLuong.requestFocus();
        txtSuaSoLuong.setText("");
        txtSuaSoLuong.setEditable(true);
        suaSoLuong();
    }//GEN-LAST:event_tblGioHangMouseClicked

    private void txtTimKiemKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKHKeyReleased
        fillTableKH();
    }//GEN-LAST:event_txtTimKiemKHKeyReleased

    private void tblTimKiemKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTimKiemKHMouseClicked
        this.rowKH = tblTimKiemKH.getSelectedRow();
        this.edit();
    }//GEN-LAST:event_tblTimKiemKHMouseClicked

    private void txtKhachTTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKhachTTKeyReleased
        double khachTT = Double.valueOf(txtKhachTT.getText().replace(".", ""));
        double tongTien = Double.valueOf(txtTongTien.getText().replace(".", "").replace("đ", ""));
        double tienThua = khachTT - tongTien;
        txtTienThua.setText(currencyVN.format(tienThua));
        updateStatus();
    }//GEN-LAST:event_txtKhachTTKeyReleased

    private void btnThemKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKHActionPerformed
        openThemKHMoi();
    }//GEN-LAST:event_btnThemKHActionPerformed

    private void txtSuaSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSuaSoLuongActionPerformed
        fillSoLuongGH();
        tinhTongTien();
    }//GEN-LAST:event_txtSuaSoLuongActionPerformed

    private void btnXoaHHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHHActionPerformed
        xoaHH();
        tinhTongTien();
    }//GEN-LAST:event_btnXoaHHActionPerformed

    private void btnTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMoiActionPerformed
        clearFrom();
    }//GEN-LAST:event_btnTaoMoiActionPerformed

    private void btnSaoChepHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaoChepHDActionPerformed
        openTimHoaDon();
    }//GEN-LAST:event_btnSaoChepHDActionPerformed

    private void btnTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTTActionPerformed
        thanhToan();
    }//GEN-LAST:event_btnTTActionPerformed

    private void txtSuaSoLuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSuaSoLuongKeyReleased
        fillSoLuongGH();
        tinhTongTien();
    }//GEN-LAST:event_txtSuaSoLuongKeyReleased

    private void txtTimKiemThuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemThuocActionPerformed
        timHangHoa();
    }//GEN-LAST:event_txtTimKiemThuocActionPerformed

    private void lstTenHHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstTenHHMouseClicked
        txtTimKiemThuoc.setText(lstTenHH.getSelectedValue());
        popupTenHH.setVisible(false);
        timHangHoa();
    }//GEN-LAST:event_lstTenHHMouseClicked

    private void btnTaoMoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTaoMoiMouseEntered
         changeIcon(1, btnTaoMoi, "src//com//qlnt//icon//btnTaoMoi_hover.png");
    }//GEN-LAST:event_btnTaoMoiMouseEntered

    private void txtKhachTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKhachTTActionPerformed
        thanhToan();
    }//GEN-LAST:event_txtKhachTTActionPerformed

    private void txtKhachTTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKhachTTFocusGained
        
    }//GEN-LAST:event_txtKhachTTFocusGained

    private void btnTaoMoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTaoMoiMouseExited
        changeIcon(2, btnTaoMoi, "src//com//qlnt//icon//btnTaoMoi.png");
    }//GEN-LAST:event_btnTaoMoiMouseExited

    private void btnXoaHHMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaHHMouseEntered
        changeIcon(1, btnXoaHH, "src//com//qlnt//icon//btnXoaHH_hover.png");
    }//GEN-LAST:event_btnXoaHHMouseEntered

    private void btnXoaHHMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaHHMouseExited
        changeIcon(1, btnXoaHH, "src//com//qlnt//icon//btnXoaHH.png");
    }//GEN-LAST:event_btnXoaHHMouseExited

    private void tblTimKiemKHMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTimKiemKHMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblTimKiemKHMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHD;
    private javax.swing.JButton btnSaoChepHD;
    private javax.swing.JButton btnTT;
    private javax.swing.JButton btnTaoMoi;
    private javax.swing.JButton btnThemKH;
    private javax.swing.JButton btnXoaHH;
    private javax.swing.ButtonGroup grGioiTinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JList<String> lstTenHH;
    private javax.swing.JPanel pnlGioHang;
    private javax.swing.JPanel pnlHoaDon;
    private javax.swing.JPanel pnlTenHH;
    private javax.swing.JPopupMenu popupTenHH;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblTimKiemKH;
    private javax.swing.JTable tblTimKiemThuoc;
    private javax.swing.JTextField txtCanNang;
    private javax.swing.JTextField txtDiem;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtKhachTT;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtNV;
    private javax.swing.JTextField txtNamSinh;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSuaSoLuong;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTienThua;
    private javax.swing.JTextField txtTimKiemKH;
    private javax.swing.JTextField txtTimKiemThuoc;
    private javax.swing.JTextField txtTongTien;
    private javax.swing.JTextArea txtTrieuChung;
    // End of variables declaration//GEN-END:variables
   void init() {
        initComponents();
        txtTimKiemThuoc.setText("Nhập tên thuốc cần tìm");
        txtTimKiemKH.setText("Nhập tên khách hàng cần tìm");
        txtNV.setText(Auth.user.getHoTen());
        txtNgayTao.setText(XDate.toString(new Date(), "dd/MM/yyyy"));
        updateStatus();
        popupTenHH.add(pnlTenHH);
        btnHD.setMnemonic(KeyEvent.VK_P);
    }

    void changeIcon(int so, JButton btn, String url) {
        if (so == 1) {
            Image img = getToolkit().createImage(url);
            btn.setIcon(new ImageIcon(img));
            btn.setCursor(new Cursor(HAND_CURSOR));
        } else {
            Image img = getToolkit().createImage(url);
            btn.setIcon(new ImageIcon(img));
        }
    }
    int row = -1;
    int rowGH = -1;
    int rowKH = -1;
    HangHoaDAO hhdao = new HangHoaDAO();
    DanhMucThuocDAO dmtdao = new DanhMucThuocDAO();
    KhachHangDAO khdao = new KhachHangDAO();
    HoaDonDAO hddao = new HoaDonDAO();
    HoaDonChiTietDAO hdctdao = new HoaDonChiTietDAO();
     void updateStatus() {
        boolean thanhToan = false;
        double tienThua = Double.valueOf(txtTienThua.getText().replace(".", "").replace("đ", ""));
        double khachTT = Double.valueOf(txtKhachTT.getText().replace(".", ""));
        if (tienThua < 0 || txtTienThua.getText().equals("") || khachTT == 0 || txtKhachTT.getText().equals("")) {
            thanhToan = false;
        } else {
            thanhToan = true;
        }
        btnTT.setEnabled(thanhToan);
        btnHD.setEnabled(thanhToan);
    }

    private void timHangHoa() {
        String keyword;
        if (txtTimKiemThuoc.getText().equals("Nhập tên thuốc cần tìm")) {
            keyword = "";
        } else {
            keyword = txtTimKiemThuoc.getText();
        }
        DefaultTableModel model = (DefaultTableModel) tblTimKiemThuoc.getModel();
        model.setRowCount(0);
        List<DanhMucThuoc> list = dmtdao.selectNotInCourse(keyword);
        for (DanhMucThuoc dmt : list) {
            List<HangHoa> listhh = hhdao.selectNotInCourse(dmt.getMaThuoc());
            for (HangHoa hh : listhh) {
                Object data[] = {
                    hh.getMaHH(),
                    dmt.getTenThuoc(),
                    dmt.getHoatChat(),
                    hh.getSlSauQuiDoi(),
                    dmt.getDonViQuiDoi(),
                    XDate.toString(hh.getHSD(), "dd/MM/yyyy"),
                    hh.getGiaBan()
                };
                model.addRow(data);
            }
        }
        for(int i=0; i<model.getRowCount(); i++){
            String tenHH = (String) tblTimKiemThuoc.getValueAt(i, 1);
            String HSD = (String) tblTimKiemThuoc.getValueAt(i, 5);            
            if(XDate.toDate(HSD, "dd/MM/yyyy").compareTo(new Date())<0){
                MsgBox.alert(this, "Hàng hóa: "+tenHH+" đã hết hạn sử dụng");
            }
        }
        for(int i=0; i<model.getRowCount(); i++){
            String tenHH = (String) tblTimKiemThuoc.getValueAt(i, 1);
            double  SoLuong = (double) tblTimKiemThuoc.getValueAt(i, 3);            
            if(SoLuong<=0){
                MsgBox.alert(this, "Hàng hóa: "+tenHH+" đã hết hàng");
            }
        }
    }

    private void themVaoGioHang() {
        DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
        String maHH = (String) tblTimKiemThuoc.getValueAt(row, 0);
        if (model.getRowCount() == 0) {
            Object data[] = {
                tblTimKiemThuoc.getValueAt(row, 0),
                tblTimKiemThuoc.getValueAt(row, 1),
                tblTimKiemThuoc.getValueAt(row, 4),
                1.0,
                tblTimKiemThuoc.getValueAt(row, 6),
                tblTimKiemThuoc.getValueAt(row, 6),};
            model.addRow(data);
        } else {
            double soLuongHH = 0;
            for (int i = 0; i < model.getRowCount(); i++) {
                if (tblGioHang.getValueAt(i, 0).equals(maHH)) {
                    double soLuongGH = (double) tblGioHang.getValueAt(i, 3);
                    soLuongHH = soLuongGH + 1;
                    model.removeRow(i);
                    break;
                } else {
                    soLuongHH = 1.0;
                }
            }
            double giaBan = (double) tblTimKiemThuoc.getValueAt(row, 6);
            Object data[] = {
                tblTimKiemThuoc.getValueAt(row, 0),
                tblTimKiemThuoc.getValueAt(row, 1),
                tblTimKiemThuoc.getValueAt(row, 4),
                soLuongHH,
                tblTimKiemThuoc.getValueAt(row, 6),
                soLuongHH * giaBan
            };
            model.addRow(data);
        }
        
    }

    void fillTableKH() {

        DefaultTableModel model = (DefaultTableModel) tblTimKiemKH.getModel();
        model.setRowCount(0);
        String keyword;
        if (txtTimKiemKH.getText().equals("Nhập tên khách hàng cần tìm")) {
            keyword = "";
        } else {
            keyword = txtTimKiemKH.getText();
        }
        List<KhachHang> listkh = khdao.selectNotInCourse(keyword);
        for (KhachHang kh : listkh) {
            Object data[] = {
                kh.getMaKH(),
                kh.getHoTen(),
                kh.isGioiTinh() ? "Nam" : "Nữ",
                kh.getNamSinh(),
                kh.getSdt(),
                kh.getDiem()
            };
            model.addRow(data);
        }
    }

    void clearFrom() {
        txtTimKiemKH.setText("Nhập tên khách hàng cần tìm");
        txtTimKiemThuoc.setText("Nhập tên thuốc cần tìm");

        DefaultTableModel modelThuoc = (DefaultTableModel) tblTimKiemThuoc.getModel();
        DefaultTableModel modelGH = (DefaultTableModel) tblGioHang.getModel();
        DefaultTableModel modelKH = (DefaultTableModel) tblTimKiemKH.getModel();

        modelThuoc.setRowCount(0);
        modelGH.setRowCount(0);
        modelKH.setRowCount(0);

        txtNV.setText(Auth.user.getHoTen());
        txtNgayTao.setText(XDate.toString(new Date(), "dd/MM/yyyy"));
        txtTongTien.setText("0");
        txtKhachTT.setText("0");
        txtTienThua.setText("0");
        txtGhiChu.setText("");
        txtTrieuChung.setText("");

        KhachHang kh = new KhachHang();
        kh.setGioiTinh(true);
        setForm(kh);        
        this.updateStatus();
    }

    void setForm(KhachHang kh) {
        txtMaKH.setText(kh.getMaKH());
        txtTenKH.setText(kh.getHoTen());
        rdoNam.setSelected(kh.isGioiTinh());
        rdoNu.setSelected(!kh.isGioiTinh());
        txtNamSinh.setText(String.valueOf(kh.getNamSinh()));
        txtSDT.setText(kh.getSdt());
        txtDiem.setText(String.valueOf(kh.getDiem()));
        txtNV.setText(Auth.user.getHoTen());
        txtNgayTao.setText(XDate.toString(new Date(), "dd/MM/yyyy"));
        tinhTongTien();
    }
    Locale localeVN = new Locale("vi", "VN");
    NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);

    void tinhTongTien() {
        DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
        double tongTien = 0;
        double khachTT = Double.valueOf(txtKhachTT.getText());
        for (int i = 0; i < model.getRowCount(); i++) {
            tongTien += Double.valueOf((double) tblGioHang.getValueAt(i, 5));
        }
        
        txtTongTien.setText(currencyVN.format(tongTien));
        txtTienThua.setText(String.valueOf(khachTT - tongTien));
    }

    private void edit() {
        String maKH = (String) tblTimKiemKH.getValueAt(rowKH, 0);
        tblTimKiemKH.setRowSelectionInterval(rowKH, rowKH);
        KhachHang kh = khdao.selectById(maKH);
        this.setForm(kh);
    }

    private void suaSoLuong() {
        double soLuong = (double) tblGioHang.getValueAt(rowGH, 3);
        txtSuaSoLuong.setText(String.valueOf(soLuong));
        updateStatus();
    }

    private void tinhThanhTien() {
        double donGia = (double) tblGioHang.getValueAt(rowGH, 4);
        double soLuong = (double) tblGioHang.getValueAt(rowGH, 3);
        double thanhTien = donGia * soLuong;
        tblGioHang.setValueAt(thanhTien, rowGH, 5);
    }

    private void fillSoLuongGH() {
        double soLuong = Double.valueOf(txtSuaSoLuong.getText());
        tblGioHang.setValueAt(soLuong, rowGH, 3);
        tinhThanhTien();
    }

    private void xoaHH() {
        if (rowGH <= -1) {
            MsgBox.alert(this, "Chọn sản phẩm cần xóa");
            return;
        } else {
            DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
            model.removeRow(rowGH);
        }
    }
    QLHoaDonJPanel TabQLHD = new QLHoaDonJPanel();

    private void openTimHoaDon() {
        QuanLyNhaThuocJFrame qlnt = new QuanLyNhaThuocJFrame();
        TimHoaDonJDialog timHD = new TimHoaDonJDialog(qlnt, true);
        timHD.setVisible(true);

        String maHD = timHD.getMaHD();
        String maKH = timHD.getMaKH();
        if (maHD.equals("") || maKH.equals("")) {
            clearFrom();
        } else {
            HoaDonDAO hddao = new HoaDonDAO();
            HoaDonChiTietDAO cthddao = new HoaDonChiTietDAO();
            DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
            model.setRowCount(0);
            try {
                List<HoaDonChiTiet> list = cthddao.selectNotInCourse(maHD);
                for (HoaDonChiTiet hdct1 : list) {
                    double soLuong = hdct1.getSoLuong();
                    double donGia = hhdao.selectById(hdct1.getMaHH()).getGiaBan();
                    double thanhTien = soLuong * donGia;
                    Object data[] = {
                        hdct1.getMaHH(),
                        dmtdao.selectById(hhdao.selectById(hdct1.getMaHH()).getMaThuoc()).getTenThuoc(),
                        dmtdao.selectById(hhdao.selectById(hdct1.getMaHH()).getMaThuoc()).getDonViQuiDoi(),
                        soLuong,
                        donGia,
                        thanhTien
                    };
                    model.addRow(data);
                }
            } catch (Exception e) {
                MsgBox.alert(this, "Lỗi load dữ liệu bảng");
            }

            setForm(khdao.selectById(maKH));
        }
    }

    private void openThemKHMoi() {
        QuanLyNhaThuocJFrame qlnt = new QuanLyNhaThuocJFrame();
        ThemKhachHangJDialog themKH = new ThemKhachHangJDialog(qlnt, true);
        themKH.setVisible(true);
        String maKH = themKH.getMaKH();
        if (maKH.equals("")) {
            fillTableKH();
        } else {
            DefaultTableModel model = (DefaultTableModel) tblTimKiemKH.getModel();
            model.setRowCount(0);
            KhachHang kh = khdao.selectById(maKH);
            setForm(kh);
        }
    }

    HoaDon getHD() {
        HoaDon hd = new HoaDon();
        if (txtMaKH.getText().equals("")) {
            hd.setMaKH("KH00015");
        } else {
            hd.setMaKH(txtMaKH.getText());
        }
        hd.setMaNV(Auth.user.getMaNV());
        hd.setNgayBan(XDate.toDate(txtNgayTao.getText(), "dd/MM/yyyy"));
        hd.setTongTien(Double.valueOf(txtTongTien.getText().replace(".", "").replace("đ", "")));
        return hd;

    }

    private void thanhToan() {
        HoaDon hd = this.getHD();
        try {
            hddao.insert(hd);
            MsgBox.alert(this, "Thanh toán thành công");
        } catch (Exception e) {
        }
        String maHD = hddao.lastMaHD().getMaHD();
        DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            HoaDonChiTiet hdct = new HoaDonChiTiet();
            hdct.setMaHD(maHD);
            hdct.setMaHH((String) tblGioHang.getValueAt(i, 0));
            hdct.setSoLuong((double) tblGioHang.getValueAt(i, 3));
            hdct.setDonGia((double) tblGioHang.getValueAt(i, 4));

            try {
                hdctdao.insert(hdct);
            } catch (Exception e) {
                MsgBox.alert(this, "Thanh toán thất bại");
            }
        }
        clearFrom();
        
    }

    void inHoaDon() {
        HoaDon hd = this.getHD();
        try {
            hddao.insert(hd);
            MsgBox.alert(this, "Thanh toán thành công");
        } catch (Exception e) {
        }
        String GioiTinh = rdoNam.isSelected() ? "Nam" : "Nữ";
        String maHD = hddao.lastMaHD().getMaHD();
        for (int i = 0; i < tblGioHang.getRowCount(); i++) {
            HoaDonChiTiet hdct = new HoaDonChiTiet();
            hdct.setMaHD(maHD);
            hdct.setMaHH((String) tblGioHang.getValueAt(i, 0));
            hdct.setSoLuong((double) tblGioHang.getValueAt(i, 3));
            hdct.setDonGia((double) tblGioHang.getValueAt(i, 4));
            try {
                hdctdao.insert(hdct);
            } catch (Exception e) {
                MsgBox.alert(this, "Thanh toán thất bại");
            }
        }
        try {
            Hashtable map = new Hashtable();
            JasperReport report = JasperCompileManager.compileReport("src/com/qlnt/report/HoaDon.jrxml");
            map.put("MaHD", maHD);
            map.put("ThanhToan", txtKhachTT.getText());            
            map.put("TongTien", txtTongTien.getText());
            map.put("GioiTinh", GioiTinh);
            map.put("CanNang", txtCanNang.getText());
            map.put("GhiChu", txtGhiChu.getText());
            map.put("TrieuChung", txtTrieuChung.getText());
            this.clearFrom();
            JasperPrint p = JasperFillManager.fillReport(report, map, XJdbc.getConnection());
            JasperViewer.viewReport(p, false);
            JasperExportManager.exportReportToPdfFile(p, "hoadon.pdf");
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

}

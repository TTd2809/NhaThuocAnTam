/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qlnt.ui;

import com.qlnt.dao.HoaDonDAO;
import com.qlnt.dao.KhachHangDAO;
import com.qlnt.dao.ThongKeDAO;
import com.qlnt.entity.KhachHang;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import static java.awt.Frame.HAND_CURSOR;
import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author monst
 */
public class TKKHThanThietJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TongQuanJPannel
     */
    public TKKHThanThietJPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTim = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstTim = new javax.swing.JList<>();
        popup = new javax.swing.JPopupMenu();
        jPanel2 = new javax.swing.JPanel();
        cboThang = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        lblTim = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();
        btnTimKiem = new javax.swing.JButton();
        pnlBieuDo = new javax.swing.JPanel();
        btnXuatTop10 = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        lstTim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstTimMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(lstTim);

        javax.swing.GroupLayout pnlTimLayout = new javax.swing.GroupLayout(pnlTim);
        pnlTim.setLayout(pnlTimLayout);
        pnlTimLayout.setHorizontalGroup(
            pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
        );
        pnlTimLayout.setVerticalGroup(
            pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        popup.setFocusable(false);

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1000, 570));
        setMinimumSize(new java.awt.Dimension(1000, 570));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thống kê khách hàng thân thiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel2.setToolTipText("");
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cboThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cboThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangActionPerformed(evt);
            }
        });
        jPanel2.add(cboThang, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 58, 151, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tháng");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 30, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Tên khách hàng tìm kiếm:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTimKiem.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtTimKiem.setOpaque(false);
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });
        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });
        jPanel2.add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 58, 203, 26));

        lblTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnSearch.png"))); // NOI18N
        lblTim.setMaximumSize(new java.awt.Dimension(30, 30));
        lblTim.setMinimumSize(new java.awt.Dimension(30, 30));
        lblTim.setPreferredSize(new java.awt.Dimension(30, 30));
        jPanel2.add(lblTim, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 58, 27, -1));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 96, 924, 10));

        tblKhachHang.setAutoCreateRowSorter(true);
        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "SDT", "Số lần mua", "Điểm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKhachHang.setFocusable(false);
        tblKhachHang.setOpaque(false);
        tblKhachHang.setRowHeight(25);
        tblKhachHang.setRowMargin(0);
        tblKhachHang.setShowHorizontalLines(false);
        tblKhachHang.setShowVerticalLines(false);
        tblKhachHang.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblKhachHang);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 420, 320));

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnTimKiem.png"))); // NOI18N
        btnTimKiem.setBorder(null);
        btnTimKiem.setContentAreaFilled(false);
        btnTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseExited(evt);
            }
        });
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel2.add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(522, 61, -1, -1));

        javax.swing.GroupLayout pnlBieuDoLayout = new javax.swing.GroupLayout(pnlBieuDo);
        pnlBieuDo.setLayout(pnlBieuDoLayout);
        pnlBieuDoLayout.setHorizontalGroup(
            pnlBieuDoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        pnlBieuDoLayout.setVerticalGroup(
            pnlBieuDoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );

        jPanel2.add(pnlBieuDo, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 110, 520, 320));

        btnXuatTop10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/btnTop10.png"))); // NOI18N
        btnXuatTop10.setBorder(null);
        btnXuatTop10.setContentAreaFilled(false);
        btnXuatTop10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXuatTop10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXuatTop10MouseExited(evt);
            }
        });
        btnXuatTop10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatTop10ActionPerformed(evt);
            }
        });
        jPanel2.add(btnXuatTop10, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 190, 30));

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlnt/icon/refresh.png"))); // NOI18N
        btnRefresh.setContentAreaFilled(false);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jPanel2.add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 20, 80, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        if (txtTimKiem.getText().equals("Nhập tên khách hàng cần tìm")) {
            txtTimKiem.setText("");
        }
    }//GEN-LAST:event_txtTimKiemFocusGained

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        if (txtTimKiem.getText().equals("")) {
            txtTimKiem.setText("Nhập tên khách hàng cần tìm");
        }
    }//GEN-LAST:event_txtTimKiemFocusLost

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void cboThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangActionPerformed
        fillTableKH();
        loadBieuDo();
        txtTimKiem.setText("");
    }//GEN-LAST:event_cboThangActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        timKiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void lstTimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstTimMouseClicked
        txtTimKiem.setText(lstTim.getSelectedValue());
        popup.setVisible(false);
    }//GEN-LAST:event_lstTimMouseClicked

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        String keyKH = txtTimKiem.getText().trim();
        if (!keyKH.equals("")) {
            List<KhachHang> list = khdao.selectNotInCourse(keyKH);
            DefaultListModel model = new DefaultListModel();
            model.setSize(0);
            for (KhachHang kh : list) {
                model.addElement(kh.getHoTen());
                lstTim.setModel(model);
            }
            popup.show(txtTimKiem, 0, txtTimKiem.getHeight());
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnXuatTop10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatTop10ActionPerformed
        try {
            xuatExcel();
        } catch (IOException ex) {
            Logger.getLogger(TKKHThanThietJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnXuatTop10ActionPerformed

    private void btnTimKiemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseEntered
        changeIcon(1, btnTimKiem, "src//com//qlnt//icon//btnTimKiem_hover.png");
    }//GEN-LAST:event_btnTimKiemMouseEntered

    private void btnTimKiemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseExited
        changeIcon(2, btnTimKiem, "src//com//qlnt//icon//btnTimKiem.png");
    }//GEN-LAST:event_btnTimKiemMouseExited

    private void btnXuatTop10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatTop10MouseEntered
        changeIcon(1, btnXuatTop10, "src//com//qlnt//icon//btnTop10_hover.png");
    }//GEN-LAST:event_btnXuatTop10MouseEntered

    private void btnXuatTop10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatTop10MouseExited
        changeIcon(2, btnXuatTop10, "src//com//qlnt//icon//btnTop10.png");
    }//GEN-LAST:event_btnXuatTop10MouseExited

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        fillComboBoxThang();
        fillTableKH();
        loadBieuDo();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXuatTop10;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTim;
    private javax.swing.JList<String> lstTim;
    private javax.swing.JPanel pnlBieuDo;
    private javax.swing.JPanel pnlTim;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JTable tblKhachHang;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
    void init() {
        txtTimKiem.setText("Nhập tên khách hàng cần tìm");
        tblKhachHang.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));
        tblKhachHang.getTableHeader().setForeground(Color.BLACK);
        fillComboBoxThang();
        fillTableKH();
        loadBieuDo();
        popup.add(pnlTim);
    }
    HoaDonDAO hddao = new HoaDonDAO();
    ThongKeDAO tkdao = new ThongKeDAO();
    KhachHangDAO khdao = new KhachHangDAO();

    void changeIcon(int so, JButton btn, String url) {
        if (so == 1) {
            Image img = getToolkit().createImage(url);
            btn.setIcon(new ImageIcon(img));
            btn.setCursor(new Cursor(HAND_CURSOR));
        } else {
            Image img = getToolkit().createImage(url);
            btn.setIcon(new ImageIcon(img));
        }
    }

    void fillComboBoxThang() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboThang.getModel();
        List<String> listThang = hddao.selectMonth();
        for (String month : listThang) {
            model.addElement(month);
        }
    }

    void fillTableKH() {
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);
        String thang = (String) cboThang.getSelectedItem();
        if (thang.equals("Tất cả")) {
            List<Object[]> list = tkdao.getKhachHangTT();
            for (Object[] row : list) {
                model.addRow(row);
            }
        } else {
            List<Object[]> list = tkdao.getKhachHangTT_Thang(thang);
            for (Object[] row : list) {
                model.addRow(row);
            }
        }

    }

    public void loadBieuDo() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        String thang = "tháng " + (String) cboThang.getSelectedItem();
        int row = 0;
        if (tblKhachHang.getRowCount() <= 10) {
            row = tblKhachHang.getRowCount();
        } else {
            row = 10;
        }
        for (int i = 0; i < row; i++) {
            int value = (int) tblKhachHang.getValueAt(i, 3);
            String tenHH = ((String) tblKhachHang.getValueAt(i, 1));
            dataset.addValue(value, thang, tenHH);
        }

        JFreeChart barchart = ChartFactory.createBarChart("Biểu đồ top 10 khách hàng mua nhiều trong tháng",
                "", "", dataset, PlotOrientation.HORIZONTAL, true, true, true);

        ChartPanel chartpanel = new ChartPanel(barchart);
        chartpanel.setPreferredSize(new Dimension(600, 450));

        CategoryPlot plot = (CategoryPlot) barchart.getPlot();
        plot.setBackgroundPaint(new Color(255, 255, 255));

        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, new Color(30, 96, 146));
        renderer.setShadowVisible(false);

        renderer.setItemMargin(0);

        pnlBieuDo.removeAll();
        pnlBieuDo.setLayout(new CardLayout());
        pnlBieuDo.add(chartpanel);
        pnlBieuDo.validate();
        pnlBieuDo.repaint();
        pnlBieuDo.setVisible(true);
    }

    private void timKiem() {
        String tenKH = txtTimKiem.getText();
        String thang = (String) cboThang.getSelectedItem();
        Object[] keyWord = {thang, tenKH};
        System.out.println(tenKH + thang);
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);
        if (thang.equals("Tất cả")) {
            List<Object[]> list = tkdao.getKhachHangTT_Ten_TatCa(tenKH);
            for (Object[] row : list) {
                model.addRow(row);
            }
        } else {
            List<Object[]> list = tkdao.getKhachHangTT_Ten(keyWord);
            for (Object[] row : list) {
                model.addRow(row);
            }
        }

    }

    private static HSSFCellStyle styleHeader(HSSFWorkbook workbook) {
        HSSFFont font = workbook.createFont();
        font.setBold(true);
        font.setFontName("Times new roman");
        font.setFontHeightInPoints((short) 14);
        font.setColor(IndexedColors.DARK_BLUE.getIndex());
        HSSFCellStyle style = workbook.createCellStyle();
        style.setFont(font);
        return style;
    }

    private static HSSFCellStyle styleContent(HSSFWorkbook workbook) {
        HSSFFont font = workbook.createFont();
        font.setFontHeightInPoints((short) 14);
        font.setFontName("Times new roman");
        HSSFCellStyle stylenoidung = workbook.createCellStyle();
        stylenoidung.setFont(font);
        return stylenoidung;
    }

    private void xuatExcel() throws IOException {
        String thang = (String) cboThang.getSelectedItem();
        HSSFWorkbook workbook = new HSSFWorkbook();
        HSSFSheet sheet = workbook.createSheet("Thang " + thang);
        int rownum = 0;
        Cell cell;
        Row row;

        HSSFCellStyle style = styleHeader(workbook);
        HSSFCellStyle styleNoiDung = styleContent(workbook);

        row = sheet.createRow(rownum);
        cell = row.createCell(0, CellType.STRING);
        cell.setCellValue("MÃ KHÁCH HÀNG");
        cell.setCellStyle(style);

        cell = row.createCell(1, CellType.STRING);
        cell.setCellValue("TÊN KHÁCH HÀNG");
        cell.setCellStyle(style);

        cell = row.createCell(2, CellType.STRING);
        cell.setCellValue("SĐT");
        cell.setCellStyle(style);

        cell = row.createCell(3, CellType.STRING);
        cell.setCellValue("SỐ LẦN MUA");
        cell.setCellStyle(style);

        cell = row.createCell(4, CellType.STRING);
        cell.setCellValue("ĐIỂM");
        cell.setCellStyle(style);

        for (int i = 0; i < tblKhachHang.getRowCount(); i++) {
            rownum++;
            row = sheet.createRow(rownum);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue((String) tblKhachHang.getValueAt(i, 0));
            cell.setCellStyle(styleNoiDung);

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue((String) tblKhachHang.getValueAt(i, 1));
            cell.setCellStyle(styleNoiDung);

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue((String) tblKhachHang.getValueAt(i, 2));
            cell.setCellStyle(styleNoiDung);

            cell = row.createCell(3, CellType.NUMERIC);
            cell.setCellValue((int) tblKhachHang.getValueAt(i, 3));
            cell.setCellStyle(styleNoiDung);

            cell = row.createCell(4, CellType.NUMERIC);
            cell.setCellValue((double) tblKhachHang.getValueAt(i, 4));
            cell.setCellStyle(styleNoiDung);
        }

        JFileChooser fchooser = new JFileChooser();
        int result = fchooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File fname = fchooser.getSelectedFile();
            try {
                FileOutputStream file = new FileOutputStream(fname + ".xls");
                workbook.write(file);
                workbook.close();
                file.close();
            } catch (Exception e) {
            }
        }

    }

}
